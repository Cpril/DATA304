---
title: "HW_6"
format: html
editor: visual
embed-resources: true
---

## Homework 6

### Exercise 1

**a.What is the most interesting lesson, guide, or piece of advice Tufte offers you in this chapter?**

On page 37, Tufte wrote: "The problem with time-series is that the simple passage of time is not a good explanatory variable: descriptive chronology is not a causal explanation".

This is interesting because we sometimes link the correlation in the time-series graphic with some external reasons and explainations. In fact, we cannot make such conclusion. Nonetheless, it gives us an idea of the trend and prompt further explore.

**b.Tufte shares some of his favorite graphics in this chapter. Pick one (but not the one about the military advance on and retreat from Russia) and answer the following.**

-   **What page is your graphic on? \[Take a screen shot and include the image as well, if you can.\]** Page 48.

![Graphic](/rprojects/jc253/DATA304/docs/Pictures/Inflation_and_unemployment.png)

-   **Why did you pick the graphic you chose?**

This is an interesting trail graph, and I like how it challenges the assumption that unemployment rate and inflation are inversely related.

-   **What encoding channels are used in the graphic? What variables are they associated with?**

Position (X axis): male unemployment rate.

Position (Y axis): Increase in CPI.

Line (connect points): time.

Text: Guides for year.

-   **What, if any, elements of the graphic would be hard/impossible for you to implement in Vega-Lite (given what we know so far)?**

I think everything in this graph would be possible to implement in Vega-Lite.

-   **What point is Tufte illustrating with this graphic?**

It is an example of relational graphic that links two variables, encouraging and imploring the view to assess the possible causal relationship between the variables. This graphic in particular confronts the commonly held belief that inflation and unemployment rate are inversely related to each other.

### Exercise 2

**List one or two ideas that you learned in these sections that will change the way you design and create data graphics.**

-   On page 30, Tufte wrote about the power of data graphics should be reserved for the richer, more complex, more difficult statistical material. If the data is simple, it can be better summarized in one or two numbers, then there's no need for data graphics. I changed my understanding in designing graphics. I didn't care about the efficiency before; I divide the data and make multiple graphics and let viewers sort through the graphics. Tufte suggests that data graphics has the power to convey complexity of data with visualization, and thus data graphics exists not only because it visualize the data, but also because it is more efficient than data tables.

### Exercise 3

**Exercise 2.13 from book:**

Step 1: List three things that are not ideal about this graph. - The guide is unclear. We don't know what the response and completion rates means. In addition, the X axis is unclear. - Completion rates are bars and response rate are lines. It suggests that completion are treated as a discrete data, while response rate is a continuous variable. - The text and the y axis guides are redundent. In addition, the orange texts such as "2.3%" overlap a little with the blue bars and sometimes with the orange lines.

Step 2: For each, describe how you would overcome the given challenges - I would change the titles from "Response and Completion Rates" to "Response and Completion Rates of \_\_\_\_ from 2017 to 2019". Add title to X-axis: "Time (measured Quaterly)" - I would change the bars of completion rate into lines. - I would only show the beginning and ending values, leaving the rest for the y axis guide.

Step 3:

**a. Graphic:**

```{r}
#| include: false
library(reticulate)
```

```{python}
import pandas as pd
import altair as alt

# Data load-in
data = {
    "values": [
        {"Date": "Q1-2017", "Completion Rate": 0.91, "Response Rate": 0.023},
        {"Date": "Q2-2017", "Completion Rate": 0.93, "Response Rate": 0.018},
        {"Date": "Q3-2017", "Completion Rate": 0.91, "Response Rate": 0.028},
        {"Date": "Q4-2017", "Completion Rate": 0.89, "Response Rate": 0.023},
        {"Date": "Q1-2018", "Completion Rate": 0.84, "Response Rate": 0.034},
        {"Date": "Q2-2018", "Completion Rate": 0.88, "Response Rate": 0.027},
        {"Date": "Q3-2018", "Completion Rate": 0.91, "Response Rate": 0.026},
        {"Date": "Q4-2018", "Completion Rate": 0.87, "Response Rate": 0.039},
        {"Date": "Q1-2019", "Completion Rate": 0.83, "Response Rate": 0.028}
    ]
}
df = pd.DataFrame(data["values"])

Order = ["Q1-2017","Q2-2017","Q3-2017","Q4-2017","Q1-2018","Q2-2018","Q3-2018","Q4-2018","Q1-2019"]

# Completion Rate Chart
Completion_chart = alt.Chart(df, width=400, height=300).mark_line(color="blue").encode(
    x=alt.X('Date:N', title="Date (measured quarterly)", sort=Order),
    y=alt.Y('Completion Rate:Q', title="Completion Rate", axis=alt.Axis(titleColor="blue"))
)
# point
Completion_chart_point = alt.Chart(df, width=400, height=300).mark_point(color="blue",size = 20).encode(
    x=alt.X('Date:N', title="Date (measured quarterly)", sort=Order),
    y=alt.Y('Completion Rate:Q')
)
# Text 
Text_completion = alt.Chart(df[df['Date'].isin(["Q1-2017", "Q1-2019"])]).mark_text(align='center', dy=10, color='blue').encode(
    x=alt.X('Date:N', sort=Order),
    y=alt.Y('Completion Rate:Q'),
    text=alt.Text("Completion Rate:Q", format=".2f")
)

Completion_chart_text = alt.layer(Completion_chart, Text_completion,Completion_chart_point)

# Response Rate Chart
Response_chart = alt.Chart(df, width=400, height=300).mark_line(color="orange").encode(
    x=alt.X('Date:N', title="Date (measured quarterly)", sort=Order),
    y=alt.Y('Response Rate:Q', title="Response Rate", axis=alt.Axis(titleColor="orange"))
)

# point
Response_chart_point = alt.Chart(df, width=400, height=300).mark_point(color="orange", size = 20).encode(
    x=alt.X('Date:N', title="Date (measured quarterly)", sort=Order),
    y=alt.Y('Response Rate:Q')
)

# Response Rate Text
Text_response = alt.Chart(df[df['Date'].isin(["Q1-2017", "Q1-2019"])]).mark_text(align='center', dy=10, color='orange').encode(
    x=alt.X('Date:N', sort=Order),
    y=alt.Y('Response Rate:Q'),
    text=alt.Text("Response Rate:Q", format=".3f")
)


Response_chart_text = alt.layer(Response_chart, Text_response, Response_chart_point)

# Combine the two charts side by side with independent y-axes
Total_chart = alt.layer(Completion_chart_text, Response_chart_text).resolve_scale(y="independent").properties(
    title=alt.TitleParams(
        text="Completion and Response Rates of Survey from 2017 to 2019", 
        anchor="middle",
        fontSize=16 
    )
).configure_axisX(
    labelAngle=0 
)

Total_chart

```

**b. Identify some ways in which your design was affected by the things you read or the examples you saw in this assignment.** Tufte talked about how time-series graphics are great for richer, more complex, more difficult data. He stressed on the efficiency of data graphics. Therefore, I chose to layer the graphics together, instead of concatenation, so that more data can be visualized efficiently in a smaller space. In addition, some graphics Tufte showed have two y axis, one on each side (example: page 15). It shows that it's okay to have two different y axis as long as they are accurately presented.
